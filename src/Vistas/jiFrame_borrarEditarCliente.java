/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Vistas;

//librerias
import Controladores.Cliente;
import Controladores.Conexion;
import javax.swing.JOptionPane;

/**
 *
 * @author atude
 */

public class jiFrame_borrarEditarCliente extends javax.swing.JInternalFrame {

    /**
     * Creates new form jiFrame_borrarEditarCliente
     */
    public jiFrame_borrarEditarCliente() {
        initComponents();
    }
    
    //cliente no disponible?
    public void comprobarCliente(boolean borrado){
        //cliente borrado?
        if (borrado){
            btnRestaurar.setEnabled(true);
            btnEliminar.setEnabled(false);
        }
        //no est√° borrado
        else {
            btnRestaurar.setEnabled(false);
            btnEliminar.setEnabled(true);
        }
    }
    
    //limpiar formulario
    private void limpiar(){
        this.txtRutCliente.setText("");
        this.txtNombreCliente.setText("");
        this.txtFonoCliente.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtRutCliente = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        btnRestaurar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtNombreCliente = new javax.swing.JTextField();
        txtFonoCliente = new javax.swing.JTextField();
        btnEliminar = new javax.swing.JButton();
        btnActualizar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Encontrar"));

        jLabel1.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel1.setText("RUT:");
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        txtRutCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRutClienteActionPerformed(evt);
            }
        });

        btnBuscar.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btnBuscar.setText("BUSCAR");
        btnBuscar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnRestaurar.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btnRestaurar.setText("RESTAURAR CLIENTE");
        btnRestaurar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRestaurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRestaurarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addGap(49, 49, 49)
                .addComponent(txtRutCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22, Short.MAX_VALUE)
                .addComponent(btnBuscar)
                .addGap(31, 31, 31))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(98, 98, 98)
                .addComponent(btnRestaurar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtRutCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addComponent(btnRestaurar)
                .addContainerGap())
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Datos"));

        jLabel2.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel2.setText("NOMBRE:");

        jLabel3.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        jLabel3.setText("FONO:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addGap(49, 49, 49)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtFonoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtFonoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        btnEliminar.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        btnEliminar.setText("ELIMINAR");
        btnEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnActualizar.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btnActualizar.setText("ACTUALIZAR");
        btnActualizar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(btnEliminar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnActualizar)
                .addGap(82, 82, 82))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEliminar)
                    .addComponent(btnActualizar))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //buscar cliente
    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        // TODO add your handling code here:
        
        //obtengo datos
        String rut = this.txtRutCliente.getText().trim();
        
        //hay datos para buscar?
        if (rut.isEmpty()) {
            JOptionPane.showMessageDialog(this,"Ingrese el rut del cliente a buscar","Error en buscar cliente",2);
        }
        //hay datos para buscar
        else {
            try {
                //existe el cliente?
                Cliente cliente = new Cliente(rut,"xxx","xxx");
                cliente.existCliente();
                //SI EXISTE
                if(Conexion.buscarCliente){
                    this.txtRutCliente.setText(cliente.getRut_cliente());
                    this.txtNombreCliente.setText(cliente.getNombre());
                    this.txtFonoCliente.setText(cliente.getFono()); 
                    comprobarCliente(cliente.getBorrado());
                }
                //el cliente NO EXISTE
                else{
                    JOptionPane.showMessageDialog(this,"cliente no existe","Buscar cliente",2);
                }
            }
            //error
            catch (Exception e) {
                //error
            }
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    //eliminar cliente
    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // TODO add your handling code here:
        String rut = this.txtRutCliente.getText().trim();
        
        //hay un rut?
        if (rut.isEmpty()) {
            JOptionPane.showMessageDialog(this,"Eliga el rut del cliente a eliminar","Eliminar cliente",2);
        }
        //hay un rut
        else {
            try {
                //existe el cliente?
                Cliente cliente = new Cliente(rut,"xxx","xxx");
                cliente.existCliente();
                //SI EXISTE, lo borro
                if(Conexion.buscarCliente){
                    cliente.borrarCliente();
                    limpiar();
                    //JOptionPane.showMessageDialog(this,"cliente eliminado","Eliminar",3);
                }
                //NO EXISTE
                else{
                    JOptionPane.showMessageDialog(this,"cliente no encontrado","Eliminar cliente",2);
                }   
            }
            //hay un error
            catch (Exception e) {
                //error
            }
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    //actualizar cliente
    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        // TODO add your handling code here:
        
        //obtengo datos
        String rut = this.txtRutCliente.getText().trim();
        String nombre = this.txtNombreCliente.getText().trim();
        String fono = this.txtFonoCliente.getText().trim();
        
        //hay datos para actualizar?
        if (rut.isEmpty() || nombre.isEmpty() || fono.isEmpty()) {
             JOptionPane.showMessageDialog(this,"No deje espacios en blanco","Actualizar cliente",2);
        }
        //no hay errores 
        else {
            try {
                //existe el cliente?
                Cliente cliente = new Cliente(rut,"xxx","xxx");
                cliente.existCliente();
                //SI EXISTE, actualizo el registro
                if(Conexion.buscarCliente){
                    cliente.setNombre(this.txtNombreCliente.getText().trim());
                    cliente.setFono(this.txtFonoCliente.getText().trim());
                    cliente.actualizarCliente();
                    limpiar();
                    //JOptionPane.showMessageDialog(this,"Cliente actualizado correctamente","Actualizar",1);
                }
                //NO EXISTE
                else{
                    JOptionPane.showMessageDialog(this,"cliente no encontrado","Actualizar cliente",1);
                }
            } 
            //hay un error
            catch (Exception e) { 
                //error
            }
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnRestaurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRestaurarActionPerformed
        // TODO add your handling code here:
        
        //obtengo datos
        String rut = this.txtRutCliente.getText().trim();
        String nombre = this.txtNombreCliente.getText().trim();
        String fono = this.txtFonoCliente.getText().trim();
        
        //hay datos para restaurar?
        if (rut.isEmpty()) {
             JOptionPane.showMessageDialog(this,"No deje espacios en blanco","Restaurar cliente",2);
        }
        //no hay errores 
        else {
            try {
                //existe el cliente?
                Cliente cliente = new Cliente(rut,"xxx","xxx");
                cliente.existCliente();
                //SI EXISTE, restauro el registro
                if(Conexion.buscarCliente){
                    cliente.restaurarCliente();
                    limpiar();
                    //JOptionPane.showMessageDialog(this,"Cliente actualizado correctamente","Actualizar",1);
                }
                //NO EXISTE
                else{
                    JOptionPane.showMessageDialog(this,"cliente no encontrado","Actualizar cliente",1);
                }
            } 
            //hay un error
            catch (Exception e) { 
                //error
            }
        }
    }//GEN-LAST:event_btnRestaurarActionPerformed

    private void txtRutClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRutClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRutClienteActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnRestaurar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField txtFonoCliente;
    private javax.swing.JTextField txtNombreCliente;
    private javax.swing.JTextField txtRutCliente;
    // End of variables declaration//GEN-END:variables
}
