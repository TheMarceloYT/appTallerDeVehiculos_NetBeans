/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Vistas;

import Controladores.Conexion;
import Controladores.Vehiculo;
import javax.swing.table.DefaultTableModel;
import java.sql.ResultSet;
import javax.swing.JOptionPane;

/**
 *
 * @author atude
 */
public class jiFrame_borrarAuto extends javax.swing.JInternalFrame {

    /**
     * Creates new form jiFrame_borrarAuto
     */
    public jiFrame_borrarAuto() {
        initComponents();
        mostrarVehiculos();
    }
    
    public void limpiar(){
        txtPatente.setText("");
        txtColor.setText("");
        txtMarca.setText("");
        txtModelo.setText("");
        txtComentario.setText("");
        txtRut.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtComentario = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaAutos = new javax.swing.JTable();
        btnRellenar = new javax.swing.JButton();
        btnBorrar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnEditar = new javax.swing.JButton();
        txtRut = new javax.swing.JTextField();
        txtPatente = new javax.swing.JTextField();
        txtMarca = new javax.swing.JTextField();
        txtColor = new javax.swing.JTextField();
        txtModelo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        btnRestaurar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);

        tablaAutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tablaAutos);

        btnRellenar.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnRellenar.setText("Rellenar Datos");
        btnRellenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRellenarActionPerformed(evt);
            }
        });

        btnBorrar.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btnBorrar.setText("BORRRAR");
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel1.setText("Patente: ");

        btnEditar.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btnEditar.setText("EDITAR");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        txtRut.setEnabled(false);

        txtColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtColorActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel3.setText("Marca:");

        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel4.setText("Color:");

        jLabel5.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel5.setText("Modelo:");

        jLabel6.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel6.setText("Rut del due√±o: ");

        jLabel7.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel7.setText("Comentario:");

        btnRestaurar.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btnRestaurar.setText("RESTAURAR");
        btnRestaurar.setEnabled(false);
        btnRestaurar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRestaurarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel1))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnRellenar, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(txtPatente, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtColor, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtModelo, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(txtRut, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnBorrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnEditar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnRestaurar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(87, 87, 87))
                    .addComponent(jScrollPane1))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txtComentario, javax.swing.GroupLayout.PREFERRED_SIZE, 558, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(88, 88, 88))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPatente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnRellenar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtModelo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(txtRut, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(20, 20, 20)
                        .addComponent(jLabel7))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(btnBorrar)
                        .addGap(18, 18, 18)
                        .addComponent(btnEditar)
                        .addGap(15, 15, 15)
                        .addComponent(btnRestaurar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtComentario, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //mostrar datos
    public void mostrarVehiculos(){
        try {
            //conecto a la DB y hago un query de select *
            String sql = "select * from vehiculos where is_deleted = "+false+" ";
            Conexion.conectar();
            Conexion.stm = Conexion.con.prepareStatement(sql);
            ResultSet rs = Conexion.stm.executeQuery(sql);

            //a√±ado las columnas a la tabla
            //DefaultTableModel modelo = (DefaultTableModel) tabla.getModel();
            DefaultTableModel modelo = new DefaultTableModel();
            modelo.addColumn("PATENTE");
            modelo.addColumn("MARCA");
            modelo.addColumn("COLOR");
            modelo.addColumn("MODELO");
            modelo.addColumn("Comentario");
            modelo.addColumn("Due√±o");

            //a√±ado los datos a las columnas
            Object [] fila = new Object[6];
            while(rs.next()){
                for(int i = 0; i<6;i++){
                    fila[i] = rs.getObject(i+1);
                    //modelo.addRow(fila);
                    //tabla.setModel(modelo);
                }
                modelo.addRow(fila);
                tablaAutos.setModel(modelo);
            }
            Conexion.desconectar();
        }
        //hubo un error
        catch (Exception e) {
            System.out.println(e);
        }
    }
    
    private void btnRellenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRellenarActionPerformed
        // TODO add your handling code here:
        String patente = this.txtPatente.getText().trim();
        
        //valido si est√° vacia
        if (patente.isEmpty()) {
            JOptionPane.showMessageDialog(this,"No deje la patente vacia","Eliminar vehiculo",2);
        }
        //hay patente
        else {
            try {
                Vehiculo vehiculo = new Vehiculo(patente);
                vehiculo.existeVehiculo();
                if(Conexion.buscarVehiculo){
                    this.txtPatente.setText(vehiculo.getPatente());
                    this.txtColor.setText(vehiculo.getColor());
                    this.txtMarca.setText(vehiculo.getMarca());
                    this.txtModelo.setText(vehiculo.getModelo());
                    this.txtComentario.setText(vehiculo.getComentario());
                    this.txtRut.setText(vehiculo.getRutCliente());
                    comprobarVehiculo(vehiculo.getBorrado());
                }
                else{
                    JOptionPane.showMessageDialog(this,"vehiculo no existe","Buscar Vehiculo",2);
                }
            }
            //error
            catch (Exception e) {
                //error
            }
        }
    }//GEN-LAST:event_btnRellenarActionPerformed

    public void comprobarVehiculo(boolean borrado){
        if (borrado){
            btnBorrar.setEnabled(false);
            btnRestaurar.setEnabled(true);
        }
        else{
            btnBorrar.setEnabled(true);
            btnRestaurar.setEnabled(false);
        }
    }
    
    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        // TODO add your handling code here:
        //obtengo patente
        String patente = this.txtPatente.getText().trim();
        
        //valido si est√° vacia
        if (patente.isEmpty()) {
            JOptionPane.showMessageDialog(this,"No deje la patente vacia","Eliminar vehiculo",2);
        }
        //no est√° vacia
        else{
            try {
                Vehiculo vehiculo = new Vehiculo(patente);
                vehiculo.existeVehiculo();
                //SI EXISTE, lo borro
                if(Conexion.buscarVehiculo){
                    vehiculo.borrarVehiculo();
                    limpiar();
                    mostrarVehiculos();
                }
                //NO EXISTE
                else{
                    JOptionPane.showMessageDialog(this,"vehiculo no encontrado","Eliminar vehiculo",2);
                }
            }
            //hay un error
            catch (Exception e) {
                //error
            }
        }
    }//GEN-LAST:event_btnBorrarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        //obtengo datos
        String patente = this.txtPatente.getText().trim();
        String marca = this.txtMarca.getText().trim();
        String modelo = this.txtModelo.getText().trim();
        String color = this.txtColor.getText().trim();
        String comentario = this.txtComentario.getText().trim();
        String rut = this.txtRut.getText().trim();

        try {
            Vehiculo vehiculo = new Vehiculo(patente,marca,color,modelo,comentario,rut);
            vehiculo.existeVehiculo();
            //SI EXISTE, actualizo el registro
            if(Conexion.buscarVehiculo){
                vehiculo.setMarca(marca);
                vehiculo.setColor(color);
                vehiculo.setModelo(modelo);
                vehiculo.setComentario(comentario);
                vehiculo.setRutCliente(rut);
                vehiculo.actualizarVehiculo();
                limpiar();
                mostrarVehiculos();
            }
            //NO EXISTE
            else{
                JOptionPane.showMessageDialog(this,"vehiculo no encontrado","Actualizar vehiculo",1);
            }
        }
        //hay un error
        catch (Exception e) {
            //error
        }

    }//GEN-LAST:event_btnEditarActionPerformed

    private void txtColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtColorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtColorActionPerformed

    private void btnRestaurarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRestaurarActionPerformed
        // TODO add your handling code here:
        
        //obtengo datos
        String patente = this.txtPatente.getText().trim();
        
        //hay datos para restaurar?
        if (patente.isEmpty()) {
             JOptionPane.showMessageDialog(this,"No deje espacios en blanco","Restaurar vehiculo",2);
        }
        //no hay errores 
        else {
            try {
                //existe el Vehiculo?
                Vehiculo vehiculo = new Vehiculo(patente);
                vehiculo.existeVehiculo();
                //SI EXISTE, restauro el registro
                if(Conexion.buscarVehiculo){
                    vehiculo.restaurarVehiculo();
                    limpiar();
                    mostrarVehiculos();
                }
                //NO EXISTE
                else{
                    JOptionPane.showMessageDialog(this,"cliente no encontrado","Actualizar cliente",1);
                }
            } 
            //hay un error
            catch (Exception e) { 
                //error
            }
        }
    }//GEN-LAST:event_btnRestaurarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnRellenar;
    private javax.swing.JButton btnRestaurar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaAutos;
    private javax.swing.JTextField txtColor;
    private javax.swing.JTextField txtComentario;
    private javax.swing.JTextField txtMarca;
    private javax.swing.JTextField txtModelo;
    private javax.swing.JTextField txtPatente;
    private javax.swing.JTextField txtRut;
    // End of variables declaration//GEN-END:variables
}
