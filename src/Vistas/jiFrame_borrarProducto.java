/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Vistas;

//librerias
import Controladores.Conexion;
import Controladores.Producto;
import javax.swing.table.DefaultTableModel;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author atude
 */
public class jiFrame_borrarProducto extends javax.swing.JInternalFrame {
    /**
     * Creates new form jiFrame_borrarProducto
     */
    public jiFrame_borrarProducto() {
        initComponents();
        mostrarProductos();
    }
    
    public void comprobarProducto(boolean borrado){
        if (borrado) {
            btnRestaurarProducto.setEnabled(true);
            btnBorrar.setEnabled(false);
        }
        else{
            btnRestaurarProducto.setEnabled(false);
            btnBorrar.setEnabled(true);
        }
    }
    
    public void limpiar(){ 
        txtId.setText("");
        txtNombre.setText("");
        txtCantidad.setText("");
        txtPrecio.setText("");
        txtTipo.setText("");
        txtMarca.setText("");
    }
    
    public void mostrarProductos(){
        try {
            //conecto a la DB y hago un query de select *
            String sql = "select * from productos where is_deleted = "+false+" ";
            Conexion.conectar();
            Conexion.stm = Conexion.con.prepareStatement(sql);
            ResultSet rs = Conexion.stm.executeQuery(sql);

            //añado las columnas a la tabla
            //DefaultTableModel modelo = (DefaultTableModel) tabla.getModel();
            DefaultTableModel modelo = new DefaultTableModel();
            modelo.addColumn("ID");
            modelo.addColumn("NOMBRE");
            modelo.addColumn("CANTIDAD");
            modelo.addColumn("PRECIO_UNITARIO");
            modelo.addColumn("TIPO");
            modelo.addColumn("MARCA");

            //añado los datos a las columnas
            Object [] fila = new Object[6];
            while(rs.next()){
                for(int i = 0; i<6;i++){
                    fila[i] = rs.getObject(i+1);
                    //modelo.addRow(fila);
                    //tabla.setModel(modelo);
                }
                modelo.addRow(fila);
                tablaProductos.setModel(modelo);
            }
            Conexion.desconectar();
        }
        //hubo un error
        catch (Exception e) {
            System.out.println(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnRellenar = new javax.swing.JButton();
        btnBorrar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnEditar = new javax.swing.JButton();
        txtTipo = new javax.swing.JTextField();
        txtId = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtCantidad = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaProductos = new javax.swing.JTable();
        txtPrecio = new javax.swing.JTextField();
        txtMarca = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        btnRestaurarProducto = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);

        btnRellenar.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnRellenar.setText("Rellenar Datos");
        btnRellenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRellenarActionPerformed(evt);
            }
        });

        btnBorrar.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnBorrar.setText("BORRRAR");
        btnBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel1.setText("id: ");

        btnEditar.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnEditar.setText("EDITAR");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        txtTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTipoActionPerformed(evt);
            }
        });

        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdActionPerformed(evt);
            }
        });

        tablaProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tablaProductos);

        txtMarca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMarcaActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel2.setText("Nombre:");

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel3.setText("Cantidad:");

        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel4.setText("Tipo:");

        jLabel5.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel5.setText("Precio:");

        jLabel6.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel6.setText("Marca:");

        btnRestaurarProducto.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        btnRestaurarProducto.setText("Restaurar");
        btnRestaurarProducto.setEnabled(false);
        btnRestaurarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRestaurarProductoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 711, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5))
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnRellenar, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel6))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtTipo)
                                    .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnBorrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnEditar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnRestaurarProducto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(88, 88, 88))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabel1)
                    .addContainerGap(707, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnRellenar, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnBorrar))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(1, 1, 1)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel2)
                                            .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel3))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(btnEditar))))
                            .addComponent(txtCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel5)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(btnRestaurarProducto))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))))
                .addContainerGap(26, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(204, 204, 204)
                    .addComponent(jLabel1)
                    .addContainerGap(128, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRellenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRellenarActionPerformed
        // TODO add your handling code here:
        //obtengo data
        String auxId = txtId.getText().trim();
        int id = 0;
        
        //erorres
        List<String> errores = new ArrayList<>();
        
        //valido data
        if (auxId.isEmpty()) {
            errores.add("- No deje el ID vacio");
        }
        //id numerico?
        try{
            id = Integer.parseInt(this.txtId.getText().trim());
        }
        catch(Exception ex) {
            errores.add("- Error, el ID debe ser númerico");
        }
        //hay errores?
        if (!errores.isEmpty()){
            //hay errores, creo mensaje de error
            String msgError = String.join("\n", errores);
            JOptionPane.showMessageDialog(null, msgError, "Error en insertado de producto", 2);
        }
        //no hay
        else {
            //hay datos para buscar
            try {
                Producto producto = new Producto(id);
                producto.existeProducto();
                comprobarProducto(producto.getBorrado());

                if(Conexion.buscarProducto){
                    this.txtId.setText(String.valueOf(producto.getId()));
                    this.txtCantidad.setText(String.valueOf(producto.getCantidad()));
                    this.txtNombre.setText(producto.getNombre());
                    this.txtPrecio.setText(String.valueOf(producto.getCostoUnitario()));
                    this.txtTipo.setText(producto.getTipo());
                    this.txtMarca.setText(producto.getMarca());
                }
                else{
                    JOptionPane.showMessageDialog(this,"producto no existe","Buscar producto",2);
                }
            }
            //error
            catch (Exception e) {
                //error
            }
        }
    }//GEN-LAST:event_btnRellenarActionPerformed

    private void btnBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarActionPerformed
        // TODO add your handling code here:
        String auxId = txtId.getText().trim();
        
        if (auxId.isEmpty()) {
            JOptionPane.showMessageDialog(null, "No deje el ID en blanco", "Error en borrado de producto", 2);
        }
        //hay id
        else {
            try {
            int id = Integer.parseInt(this.txtId.getText().trim());
            Producto producto = new Producto(id);
            producto.existeProducto();
            //SI EXISTE, lo borro
            if(Conexion.buscarProducto){
                producto.borrarProducto();
                limpiar();
                mostrarProductos();
            }
            //NO EXISTE
            else{
                JOptionPane.showMessageDialog(this,"Producto no encontrado","Eliminar producto",2);
            }
            }
            //hay un error
            catch (Exception e) {
                //error
            }
        }
    }//GEN-LAST:event_btnBorrarActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        // TODO add your handling code here:
        //obtengo datos
        String nombre = this.txtNombre.getText().trim();
        String tipo = this.txtTipo.getText().trim();
        String marca = this.txtMarca.getText().trim();
        String auxPrecio = txtPrecio.getText().trim();
        String auxCant = txtCantidad.getText().trim();
        int precio = 0;
        int cantidad = 0;
        
        //erorres
        List<String> errores = new ArrayList<>();
        
        //valido data
        if (nombre.isEmpty() || tipo.isEmpty() || marca.isEmpty() || auxPrecio.isEmpty() || auxCant.isEmpty()) {
            errores.add("- No deje campos vacios");
        }
        if (nombre.length() > 25) {
            errores.add("- El largo del nombre no debe ser mayor a 25");
        }
        if (tipo.length() > 20) {
            errores.add("- El largo del tipo no debe ser mayor a 20");
        }
        if (marca.length() > 25) {
            errores.add("- El largo de la marca no debe ser mayor a 25");
        }
        //datos numericos?
        try{
            precio = Integer.parseInt(this.txtPrecio.getText());
        }
        catch (Exception ex) {
            errores.add("- Error, el precio debe ser númerico");
        }
        try{
            cantidad = Integer.parseInt(this.txtCantidad.getText());
        }
        catch (Exception ex) {
            errores.add("- Error, la cantidad debe ser númerica");
        }
        //hay errores?
        if (!errores.isEmpty()) {
            //hay errores, creo mensaje de error
            String msgError = String.join("\n", errores);
            JOptionPane.showMessageDialog(null, msgError, "Error en insertado de producto", 2);
        }
        //no hay
        else {
            try {
            int id = Integer.parseInt(this.txtId.getText().trim());
            Producto producto = new Producto(id);
            producto.existeProducto();
            //SI EXISTE, actualizo el registro
            if(Conexion.buscarProducto){
                producto.setNombre(nombre);
                producto.setCostoUnitario(precio);
                producto.setCantidad(cantidad);
                producto.setTipo(tipo);
                producto.setMarca(marca);
                producto.actualizarProducto();
                limpiar();
                mostrarProductos();
            }
            //NO EXISTE
            else{
                JOptionPane.showMessageDialog(this,"Producto no encontrado","Actualizar Producto",1);
            }
            }
            //hay un error
            catch (Exception e) {
                //error
            }
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void txtTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTipoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTipoActionPerformed

    private void txtMarcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMarcaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMarcaActionPerformed

    private void txtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdActionPerformed

    private void btnRestaurarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRestaurarProductoActionPerformed
        // TODO add your handling code here:
        //obtengo datos
        String auxId = txtId.getText().trim();
        
        if (auxId.isEmpty()) {
            JOptionPane.showMessageDialog(null, "No deje el ID en blanco", "Error en restaurar de producto", 2);
        }
        //todo ok, hay id
        else{
            try {
            int id = Integer.parseInt(this.txtId.getText().trim());
            Producto producto = new Producto(id);
            producto.existeProducto();
            //SI EXISTE, restauro el registro
            if(Conexion.buscarProducto){
                producto.restaurarProducto();
                limpiar();
                mostrarProductos();
            }
            //NO EXISTE
            else{
                JOptionPane.showMessageDialog(this,"Producto no encontrado","Restaurar Producto",1);
            }
            }
            //hay un error
            catch (Exception e) {
                //error
            }
        }
    }//GEN-LAST:event_btnRestaurarProductoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBorrar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnRellenar;
    private javax.swing.JButton btnRestaurarProducto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaProductos;
    private javax.swing.JTextField txtCantidad;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtMarca;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPrecio;
    private javax.swing.JTextField txtTipo;
    // End of variables declaration//GEN-END:variables
}
